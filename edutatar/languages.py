import logging
import traceback

__logger = logging.getLogger(__name__)
# flake8: noqa
strings = {
    "ru": {
        "language_applied": "‚úÖ <b>–í–∞—à —è–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω, –∏–∑–º–µ–Ω–∏—Ç—å –≤—ã –µ–≥–æ —Å–º–æ–∂–µ—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.</b>",
        "enter_login": "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>–ª–æ–≥–∏–Ω</b> –æ—Ç edu.tatar.ru",
        "enter_password": "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>–ø–∞—Ä–æ–ª—å</b> –æ—Ç edu.tatar.ru",
        "let_me_check_login_and_password": "<i>–°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ—Ä—é –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.</i>",
        "incorrect_login_and_password": "–£–ø—Å, –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ —É–≤–µ–Ω—á–∞–ª–∞—Å—å —É—Å–ø–µ—Ö–æ–º. –ú–æ–∂–µ—Ç –±—ã—Ç—å –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞:\n"
        + "- –í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é –ø–∞—Ä—É –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è\n"
        + "- –°–µ—Ä–≤–µ—Ä—ã edu.tatar.ru –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç."
        + "–ï—Å–ª–∏ –≤—ã —É–±–µ–∂–¥–µ–Ω—ã, —á—Ç–æ –≤–∞—à–∏ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å —Ç–æ—á–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.\n\n"
        + "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>–ª–æ–≥–∏–Ω</b> –æ—Ç edu.tatar.ru:",
        "choose_option": "<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>",
        "daily_grades": "–û—Ü–µ–Ω–∫–∏ –∑–∞ –¥–µ–Ω—å",
        "quarter_grades": "–û—Ü–µ–Ω–∫–∏ –∑–∞ —á–µ—Ç–≤–µ—Ä—Ç—å",
        "first_quarter": "1-–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å",
        "second_quarter": "2-–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å",
        "third_quarter": "3-–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å",
        "fourth_quarter": "4-–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å",
        "year": "–ì–æ–¥",
        "copy": "‚¨á –î—É–±–ª–∏—Ä–æ–≤–∞—Ç—åÔ∏è",
        "back": "‚Ü© –ù–∞–∑–∞–¥",
        "thanks": "‚ò∫Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –±–æ—Ç–µ.",
        "settings": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öô",
        "here_you_can_change_settings": "‚öô –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:",
        "language": "üëÖ –Ø–∑—ã–∫",
        "ru": "–†—É—Å—Å–∫–∏–π üá∑üá∫",
        "tr": "–¢–∞—Ç–∞—Ä—Å–∫–∏–π",
        "enter_rounding": "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ - –ø—Ä–∞–≤–∏–ª–æ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫ –≤ –≤–∞—à–µ–π —à–∫–æ–ª–µ(9&lt;x&lt;100). –ü—Ä–∏–º–µ—Ä:\n"
        "<pre>60</pre> - –±–∞–ª–ª –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –±—É–¥–µ—Ç <b>2.60/3.60/4.60</b>",
        "incorrect_rounding": "–í—ã –≤–≤–µ–ª–∏ <b>–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ</b> —á–∏—Å–ª–æ, –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –∫–∞–∫ –≤ –æ–±—Ä–∞–∑—Ü–µ(9&lt;x&lt;100):\n"
        + "<pre>60</pre> –¥–ª—è –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –≤ <b>2.60/3.60/4.60</b>",
        "successfully_changed": "‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ.",
        "rounding_rule": "‚è∫ –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ",
        "are_you_sure": "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞?",
        "yes": "–î–∞",
        "no": "–ù–µ—Ç",
        "logout": "–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞",
        "quarter": "–ß–µ—Ç–≤–µ—Ä—Ç—å",
        "marks": "–û—Ü–µ–Ω–∫–∏",
        "delimeter": "–†–∞–∑–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å",
        "changeDelimeter": '–ö–Ω–æ–ø–∫–∞–º–∏ "+" –∏ "-" —É–º–µ–Ω—å—à–∞–π—Ç–µ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Ä–∞–∑–º–µ—Ä —Ä–∞–∑–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—è, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–ª–µ–∑–∞—Ç—å –≤ —Å—Ç—Ä–æ–∫—É. –≠—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –¥–ª—è –±–æ–ª—å—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞. :)\n',
        "save": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
    },
    "tr": {
        "language_applied": "<b>–°–µ–∑–Ω–µ“£ —Ç–µ–ª–µ–≥–µ–∑ —É“£—ã—à–ª—ã —Å–∞–∫–ª–∞–Ω–≥–∞–Ω, —Å–µ–∑ –∞–Ω—ã –∫”©–π–ª”ô“Ø–ª”ô—Ä–¥”ô “Ø–∑–≥”ô—Ä—Ç”ô –∞–ª–∞—Å—ã–∑.</b>",
        "enter_login": "Edu.tatar.ru —Å–∞–π—Ç—ã–Ω–Ω–∞–Ω <b>–ª–æ–≥–∏–Ω</b> –∫–µ—Ä—Ç–µ–≥–µ–∑",
        "enter_password": "Edu.tatar.ru —Å–∞–π—Ç—ã–Ω–Ω–∞–Ω <b>—Å–µ—Ä—Å“Ø–∑–µ–≥–µ–∑–Ω–µ</b> –∫–µ—Ä—Ç–µ–≥–µ–∑ ",
        "let_me_check_login_and_password": "–ú–∏–Ω –º”ô–≥—ä–ª“Ø–º–∞—Ç–Ω—ã“£ –¥”©—Ä–µ—Å–ª–µ–≥–µ–Ω —Ç–∏–∫—à–µ—Ä–µ—Ä–º–µ–Ω, –∑–∏–Ω“ª–∞—Ä, –∫”©—Ç–µ–≥–µ–∑.",
        "incorrect_login_and_password": "–û–π, –∫–µ—Ä—Ç–µ–ª–≥”ô–Ω –º”ô–≥—ä–ª“Ø–º–∞—Ç–Ω—ã —Ç–∏–∫—à–µ—Ä“Ø —É“£—ã—à–ª—ã –±—É–ª–º–∞–¥—ã. –ò–∫–µ –≤–∞—Ä–∏–∞–Ω—Ç –±—É–ª—ã—Ä–≥–∞ –º”©–º–∫–∏–Ω:\n"
        + "- –°–µ–∑ –¥”©—Ä–µ—Å –±—É–ª–º–∞–≥–∞–Ω –∫—É–ª–ª–∞–Ω—É—á—ã –∏—Å–µ–º–µ–Ω “ª”ô–º —Å–µ—Ä—Å“Ø–∑ –ø–∞—Ä—ã–Ω –∫–µ—Ä—Ç—Ç–µ–≥–µ–∑.\n"
        + "- Edu.tatar.ru —Å–µ—Ä–≤–µ—Ä–ª–∞—Ä—ã –≤–∞–∫—ã—Ç–ª—ã—á–∞ —Ç“Ø–±”ô–Ω."
        + "”ò–≥”ô—Ä –¥”ô —Å–µ–∑–Ω–µ“£ –∫—É–ª–ª–∞–Ω—É—á—ã –∏—Å–µ–º–µ–≥–µ–∑ “ª”ô–º —Å–µ—Ä—Å“Ø–∑–µ–≥–µ–∑ —Ç”©–≥”ô–ª –∏–∫”ô–Ω–µ–Ω”ô –∏–Ω–∞–Ω—Å–∞–≥—ã–∑, –±–µ—Ä–Ω–∏—á”ô –º–∏–Ω—É—Ç—Ç–∞–Ω —Å–æ“£ –∫–∞–±–∞—Ç–ª–∞–ø –∫–∞—Ä–∞–≥—ã–∑.\n\n"
        + "Edu.tatar.ru —Å–∞–π—Ç—ã–Ω–Ω–∞–Ω <b>–ª–æ–≥–∏–Ω</b> –∫–µ—Ä—Ç–µ–≥–µ–∑",
        "choose_option": "<b>–≠—à–Ω–µ —Å–∞–π–ª–∞–≥—ã–∑:</b>",
        "daily_grades": "–ö”©–Ω–¥”ô–ª–µ–∫ –±–∏–ª–≥–µ–ª”ô—Ä",
        "quarter_grades": "–ß–∏—Ä–µ–∫ –±–∏–ª–≥–µ–ª”ô—Ä",
        "first_quarter": "1 –Ω—á–µ —á–∏—Ä–µ–∫",
        "second_quarter": "2 –Ω—á–µ —á–∏—Ä–µ–∫",
        "third_quarter": "3 –Ω—á–µ —á–∏—Ä–µ–∫",
        "fourth_quarter": "4 –Ω—á–µ —á–∏—Ä–µ–∫",
        "year": "–ï–ª",
        "copy": "–ö“Ø—á–µ—Ä–º”ô",
        "back": "–ö–∏—Ä–µ",
        "thanks": "–ë–æ—Ç –±–µ–ª”ô–Ω —Ç–µ—Ä–∫”ô–ª–≥”ô–Ω ”©—á–µ–Ω —Ä”ô—Ö–º”ô—Ç.",
        "settings": "–ö”©–π–ª”ô“Ø–ª”ô—Ä",
        "here_you_can_change_settings": "–ë—É –±“Ø–ª–µ–∫—Ç”ô —Å–µ–∑ –±–æ—Ç –∫”©–π–ª”ô–Ω–º”ô–ª”ô—Ä–µ–Ω “Ø–∑–≥”ô—Ä—Ç”ô –∞–ª–∞—Å—ã–∑:",
        "language": "–¢–µ–ª",
        "ru": "–†—É—Å—Å–∫–∏–π",
        "tr": "–¢–∞—Ç–∞—Ä",
        "enter_rounding": "–ú”ô–∫—Ç”ô–±–µ–≥–µ–∑–¥”ô –∫–ª–∞—Å—Å–ª–∞—Ä–Ω—ã –¥”©—Ä–µ—Å —Ç“Ø–≥”ô—Ä”ô–∫–ª”ô“Ø ”©—á–µ–Ω –Ω–æ–º–µ—Ä –∫–µ—Ä—Ç–µ–≥–µ–∑. –ú–∏—Å–∞–ª:\n"
        "<pre>60</pre> - —Ç“Ø–≥”ô—Ä”ô–∫ –±–∞–ª–ª –±—É–ª–∞—á–∞–∫ <b>2.60/3.60/4.60</b>",
        "incorrect_rounding": "–°–µ–∑ <b>—è–ª–≥—ã—à</b> –Ω–æ–º–µ—Ä—ã–Ω –∫–µ—Ä—Ç—Ç–µ–≥–µ–∑, —Å–µ–∑ –∞–Ω—ã –º–∏—Å–∞–ª–¥–∞–≥—ã –∫–µ–±–µ–∫ –∫–µ—Ä—Ç–µ—Ä–≥”ô —Ç–∏–µ—à:\n"
        + "<pre>60</pre> ”ô–π–ª”ô–Ω–¥–µ—Ä“Ø ”©—á–µ–Ω <b>2.60/3.60/4.60</b>",
        "successfully_changed": "–£“£—ã—à–ª—ã “Ø–∑–≥”ô—Ä—Ç–µ–ª–¥–µ.",
        "rounding_rule": "–¢“Ø–≥”ô—Ä”ô–∫–ª”ô“Ø",
    },
}


def get_text(language, string):
    __logger.debug(
        "ASKED FOR STRING: {}, LANGUAGE: {}".format(string, language)
    )
    try:
        return strings[language][string]
    except KeyError as e:
        traceback.print_exc()
        return ""
